{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNIa/EbfVEuAb9zQFRQ0TZV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["# 10장. 시퀀스를 예측하는 머신러닝 모델 만들기"],"metadata":{"id":"MXWabSz01I-8"}},{"cell_type":"markdown","source":["1. 윈도 데이터셋 만들기\n","\n","tf.data 라이브러리: 데이터 조작에 유용한 도구들이 존재.\n","\n","1) \n","----\n","1. tf.data.Dataset.range() 함수를 이용하여 0~9까지의 값을 담는 데이터셋 생성\n","\n","2. dataset.window()함수를 이용하여 데이터셋을 5개 항목으로 구성된 인도로 나누고,    \n","shift=항목개수를 설정.   \n","drop_remainder=True로 설정하여 데이터셋의 마지막 부분에서 윈도 크기보다 작은 개수가 남으면 해당 윈도를 drop(버리도록))   \n","==> dataset\n","\n","3. 정의된 윈도를 사용하여 데이터셋 분할을 수행: dataset.flat_map() 내에 5개 항목을 가진 배치를 생성: window.batch=배치항목 개수\n","\n","4. n개의 값을 특성으로 사용하고, 이어지는 하나의 값을 레이블로 사용하는 훈련 데이터 생성   \n","  dataset.map() 내에 lambda함수를 적용하여 각 윈도를 마지막 이전의 값과 마지막 값으로 분리\n","\n","참고)   \n","lambda함수: 함수명=lambda 파라미터: 함수식      \n","예) def adder1(a, b):    \n","        return a+b   \n","=> adder2 = lambda a,b: a+b   \n","print(adder1(1,2))   \n","print(adder2(1,2))   \n","   \n","lambda 함수 응용 -> 고차함수   \n","고차함수: 함수를 파라미터로 사용하거나 반환값으로 사용하는 함수   \n","1) map(함수, 리스트): 리스트 항목마다 함수를 적용   \n","  num_list = [1,2,3]   \n","  result = map(lambda x : x*x, num_list)   \n","\n","2) reduce(함수 ,자료형): 순서가 있는 자료형(문자열, 리스트, 튜플)에 사용. 결과값을 누적해서 연산.   \n","  from functools import reduce   \n","  num_list = [1,2,3,4]   \n","  result = reduce(lambda a,b : a+b, num_list)   \n","   \n","  result = reduce(lambda a,b: b+a, \"abcde\")   \n","   \n","3) filter(함수, 리스트): 걸러주는 기능. 원하는 조건에 맞는 항목만 추출 가능.   \n","  num_list = [1,2,3,4,5,6,7,8,9,10]   \n","  result = filter(lambda x : x%2 != 0, num_list)   "],"metadata":{"id":"RDfJdbYL7BAB"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"NCNiwrF21ERG","executionInfo":{"status":"ok","timestamp":1680050865698,"user_tz":-540,"elapsed":3662,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"outputs":[],"source":["import tensorflow as tf\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["dataset = tf.data.Dataset.range(10)\n","dataset = dataset.window(5, shift=1, drop_remainder=True) \n","dataset = dataset.flat_map(lambda window: window.batch(5)) # 분할\n","for window in dataset:\n","    print(window.numpy())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MgO5Q5X61V3V","executionInfo":{"status":"ok","timestamp":1680052128306,"user_tz":-540,"elapsed":664,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"e4ed723c-7b6e-4527-ce98-721758714f13"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:From /usr/local/lib/python3.9/dist-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.\n","Instructions for updating:\n","Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089\n"]},{"output_type":"stream","name":"stdout","text":["[0 1 2 3 4]\n","[1 2 3 4 5]\n","[2 3 4 5 6]\n","[3 4 5 6 7]\n","[4 5 6 7 8]\n","[5 6 7 8 9]\n"]}]},{"cell_type":"code","source":["dataset = tf.data.Dataset.range(10)\n","dataset = dataset.window(5, shift=1, drop_remainder=True)\n","dataset = dataset.flat_map(lambda window: window.batch(5)) # 분할\n","dataset = dataset.map(lambda window: (window[:-1], window[-1:])) # 뒤에 하나는 레이블로 뽑을 거에요\n","for x,y in dataset:\n","    print(x.numpy(), y.numpy())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"841ZbrFO6Paz","executionInfo":{"status":"ok","timestamp":1680052183024,"user_tz":-540,"elapsed":515,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"e0cba34b-232b-4d70-b7e6-b727df05cd3d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2 3] [4]\n","[1 2 3 4] [5]\n","[2 3 4 5] [6]\n","[3 4 5 6] [7]\n","[4 5 6 7] [8]\n","[5 6 7 8] [9]\n"]}]},{"cell_type":"code","source":["dataset = tf.data.Dataset.range(10)\n","dataset = dataset.window(5, shift=1, drop_remainder=True)\n","dataset = dataset.flat_map(lambda window: window.batch(5)) # 분할\n","dataset = dataset.map(lambda window: (window[:-1], window[-1:])) # 뒤에 하나는 레이블로 뽑을 거에요\n","dataset = dataset.shuffle(buffer_size=10)\n","dataset = dataset.batch(2).prefetch(1)\n","for x,y in dataset:\n","    print(\"x = \", x.numpy())\n","    print(\"y = \", y.numpy())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VOrmqAtd6dm4","executionInfo":{"status":"ok","timestamp":1680052196616,"user_tz":-540,"elapsed":483,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"45c671dc-5421-4550-93b7-4f9f1f9e5803"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["x =  [[0 1 2 3]\n"," [2 3 4 5]]\n","y =  [[4]\n"," [6]]\n","x =  [[1 2 3 4]\n"," [3 4 5 6]]\n","y =  [[5]\n"," [7]]\n","x =  [[5 6 7 8]\n"," [4 5 6 7]]\n","y =  [[9]\n"," [8]]\n"]}]},{"cell_type":"markdown","source":["시퀀스를 예측하는 머신러닝 모델 만들기\n","\n","시계열 데이터를 구성할 때,   \n","=> 윈도(Window) 데이터셋을 만든다\n","\n","시간 t의 값 = 시간 t 이전의 값으로 예측.   \n","예) 이전 30개의 값으로 타임스텝 1,200의 값을 예측할 경우,   \n","    타임스텝 1,170부터 1,199"],"metadata":{"id":"W9NUbBiF6rPg"}},{"cell_type":"markdown","source":["5. 데이터셋이기 때문에 람다함수를 통하여 셔플리(suffling)과 배치(Batch)도 지원. 셔플링한 후, 배치 크기를 2로 지정\n","dataset.suffle(vuffer_size=버퍼크기)\n","dataset.batch(2)prefetch(1)\n","\n","참고\n","prefetch: 앞으로 연산에 필요한 data들을 미리 가져오는 것을 의미\n","\n","출력 결과\n","첫번째 배치: 2와 3으로 시작하는 두개의 x(배치=2)와 레이블로 구성되고,\n","두번째 배치: 1와 5으로 시작하는 두개의 x(배치=2)와 레이블로 구성되고,"],"metadata":{"id":"BEFvJuS4BJfc"}},{"cell_type":"markdown","source":["이와 같이 어떤 시계열 데이터셋도 신경망의 훈련 데이터로 변환가능\n","\n","6. 지금까지의 내용을 하나의 함수로 정의"],"metadata":{"id":"nYlGw8EKGRqZ"}},{"cell_type":"markdown","source":["2. DNN 만들고 시퀀스 데이터로 훈련하기\n","\n","  tf.keras를 이용한 간단한 신경망 모델: 세개의 밀집층으로 구성.\n","  첫번째 층: window_size 크기를 입력받음\n","  마지막 출력층: 예측값을 만듦.\n","\n","  옵티마이저(SGD)모델: tf.keras.optimizers.SGD(learning_rage=1e-5, momentum=0.9)\n","  손실함수(MSE)와 옵티마이저(SGD)로 모델을 컴파일: \n","  model.compile(loss='mse', optimizer=옵티마이저(SGD) 모델)\n","\n","참고: SGD\n","SGD는 학습률(learning_rate)과 모멘텀(momentum) 매개변수로 값을 받아 옵티마이저의 최적화 과정을 조정.\n","\n","모멘텀: 경사하강법(gradient descent) 최적화 알고리즘의 한 종류\n","모멘텀 알고리즘: 누적된 과거 그래디언트가 지향하고 있는 어떤 방향을 현재 그래디언트에 보정하려는 방식.(일종의 관성 또는 가속도처럼 생각하면 편하다)\n","https://tensorflow.blog/2017/03/22/momentum-nesterov-momentum/\n","\n","데이터셋이 모두 다르기 떄문에 적절한 값을 찾는 것이 좋다. "],"metadata":{"id":"YJAUXOYAGgls"}},{"cell_type":"markdown","source":["### 윈도우를 적용한 시계열 데이터셋 만들기"],"metadata":{"id":"j7qQHt8uIHGL"}},{"cell_type":"code","source":["# 9장의 코드와 동일.\n","# 합성 시계열 데이터셋을 만들기 위한 코드\n","\n","def trend(time, slope=0):\n","    return slope * time\n","\n","def seasonal_pattern(season_time):\n","    return np.where(season_time < 0.4,\n","                    np.cos(season_time * 2 * np.pi),\n","                    1 / np.exp(3 * season_time))\n","\n","def seasonality(time, period, amplitude=1, phase=0):\n","    season_time = ((time + phase) % period) / period\n","    return amplitude * seasonal_pattern(season_time)\n","\n","def noise(time, noise_level=1, seed=None):\n","    rnd = np.random.RandomState(seed)\n","    return rnd.randn(len(time)) * noise_level\n","\n","time = np.arange(4 * 365 + 1, dtype=\"float32\")\n","series = trend(time, 0.1)\n","baseline = 10\n","amplitude = 20\n","slope = 0.09\n","noise_level = 5\n","\n","series = baseline + trend(time, slope) \n","series += seasonality(time, period=365, amplitude=amplitude)\n","series += noise(time, noise_level, seed=42)"],"metadata":{"id":"uMEg5YS26hDT","executionInfo":{"status":"ok","timestamp":1680055862791,"user_tz":-540,"elapsed":508,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# 윈도 데이터셋으로 변환하여 훈련 데이터를 준비\n","\n","def windowed_dataset(series, window_size, batch_size, shuffle_buffer):\n","    dataset = tf.data.Dataset.from_tensor_slices(series)\n","    dataset = dataset.window(window_size + 1, shift=1, drop_remainder=True)\n","    dataset = dataset.flat_map(lambda window: window.batch(window_size + 1))\n","    dataset = dataset.shuffle(shuffle_buffer).map(\n","        lambda window: (window[:-1], window[-1])\n","    )\n","    dataset = dataset.batch(batch_size).prefetch(1)\n","    return dataset"],"metadata":{"id":"JryTDl-JIKnc","executionInfo":{"status":"ok","timestamp":1680055955958,"user_tz":-540,"elapsed":500,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# 시계열 데이터를 훈련 세트와 검증 세트로 나누기.\n","# 그 다음으로 윈도 크기, 배치 크기, 셔플링 버퍼 크기 등의 상수를 지정.\n","\n","split_time = 1000\n","time_train = time[:split_time]\n","x_train = series[:split_time]\n","time_valid = time[split_time:]\n","x_valid = series[split_time:]\n","window_size = 20\n","batch_size = 32\n","shuffle_buffer_size = 1000\n","dataset = windowed_dataset(x_train, window_size, batch_size, \n","                           shuffle_buffer_size)\n","\n","# 이를 통해 데이터는 tf.keras.Dataset의 객체가 됨. 따라서 model.fit에 하나의 매개변수로 데이터를 전달할 수 있게 됨."],"metadata":{"id":"fLevOuO7I22r","executionInfo":{"status":"ok","timestamp":1680056033466,"user_tz":-540,"elapsed":1097,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["dataset = windowed_dataset(series, window_size, 1, shuffle_buffer_size)\n","for feature, label in dataset.take(1):\n","    print(feature)\n","    print(label)\n","\n","# 첫번째 숫자 리스트는 특성을 의미함. 윈도 크기가 20이므로 1 X 20 크기의 텐서이다. \n","# 두번째 숫자는 모델이 특성을 매핑할 레이블을 의미함. (67.47085)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"deYX4m1gJJoR","executionInfo":{"status":"ok","timestamp":1680056454135,"user_tz":-540,"elapsed":487,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"bc0e1f72-eec0-415e-ff2b-cbeda5ecc3d0"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(\n","[[ 91.38347  101.491005  91.43029  109.28827   98.53663   96.932556\n","   91.64963   99.37076   92.913605  96.319275 108.421974  95.04854\n","  101.17749   91.812584  95.04598  103.96257   91.8566   103.93184\n","   98.28189   91.79975 ]], shape=(1, 20), dtype=float32)\n","tf.Tensor([97.63857], shape=(1,), dtype=float32)\n"]}]},{"cell_type":"markdown","source":["## DNN을 만들고 시퀀스 데이터로 훈련하기"],"metadata":{"id":"0hZIszv5KFRO"}},{"cell_type":"code","source":["dataset = windowed_dataset(x_train, window_size, \n","                           batch_size, shuffle_buffer_size)\n","\n","model = tf.keras.models.Sequential([\n","    tf.keras.layers.Dense(10, input_shape=[window_size], \n","                          activation=\"relu\"), \n","    tf.keras.layers.Dense(10, activation=\"relu\"), \n","    tf.keras.layers.Dense(1)\n","])"],"metadata":{"id":"9AdMLhhWJ8_C","executionInfo":{"status":"ok","timestamp":1680056283328,"user_tz":-540,"elapsed":476,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["sgd = tf.keras.optimizers.SGD(learning_rate=1e-6, momentum=0.9)\n","model.compile(loss=\"mse\",optimizer=sgd)"],"metadata":{"id":"J82-AFh1KGx3","executionInfo":{"status":"ok","timestamp":1680056574975,"user_tz":-540,"elapsed":480,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["model.fit(dataset,epochs=100,verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ih9Gk4C8LN6p","executionInfo":{"status":"ok","timestamp":1680057175068,"user_tz":-540,"elapsed":594384,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"34c36617-61e4-47d0-fdb0-e96e99a432ae"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1441/1441 [==============================] - 9s 3ms/step - loss: 137.1450\n","Epoch 2/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 105.3082\n","Epoch 3/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 79.4858\n","Epoch 4/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 75.4918\n","Epoch 5/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 70.0779\n","Epoch 6/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 60.3242\n","Epoch 7/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 72.8724\n","Epoch 8/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 60.3275\n","Epoch 9/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 62.6239\n","Epoch 10/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.5434\n","Epoch 11/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.0166\n","Epoch 12/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.5042\n","Epoch 13/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.6385\n","Epoch 14/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 54.9563\n","Epoch 15/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 71.5680\n","Epoch 16/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 64.6118\n","Epoch 17/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 62.9909\n","Epoch 18/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 62.1128\n","Epoch 19/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 59.8446\n","Epoch 20/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 73.1680\n","Epoch 21/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 77.2372\n","Epoch 22/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.8327\n","Epoch 23/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 72.2020\n","Epoch 24/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 75.0816\n","Epoch 25/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 75.0993\n","Epoch 26/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 64.7638\n","Epoch 27/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 57.7006\n","Epoch 28/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.1095\n","Epoch 29/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 74.9644\n","Epoch 30/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 62.4034\n","Epoch 31/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 73.7744\n","Epoch 32/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 64.5883\n","Epoch 33/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.2906\n","Epoch 34/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.0603\n","Epoch 35/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 59.6544\n","Epoch 36/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 54.8749\n","Epoch 37/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 60.0985\n","Epoch 38/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 70.9372\n","Epoch 39/100\n","1441/1441 [==============================] - 7s 5ms/step - loss: 64.9722\n","Epoch 40/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 68.4229\n","Epoch 41/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 58.2466\n","Epoch 42/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 74.7411\n","Epoch 43/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 74.8292\n","Epoch 44/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 58.6811\n","Epoch 45/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 59.8972\n","Epoch 46/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 63.5091\n","Epoch 47/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 60.7537\n","Epoch 48/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 70.1094\n","Epoch 49/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 74.0273\n","Epoch 50/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 63.8434\n","Epoch 51/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 57.4682\n","Epoch 52/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 66.5975\n","Epoch 53/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 56.4454\n","Epoch 54/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 63.0344\n","Epoch 55/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 59.6465\n","Epoch 56/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 71.2935\n","Epoch 57/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 72.3404\n","Epoch 58/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 70.2749\n","Epoch 59/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 58.5945\n","Epoch 60/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.9239\n","Epoch 61/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.9812\n","Epoch 62/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 60.9466\n","Epoch 63/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 69.3271\n","Epoch 64/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 64.5359\n","Epoch 65/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 82.9109\n","Epoch 66/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.4287\n","Epoch 67/100\n","1441/1441 [==============================] - 7s 4ms/step - loss: 58.0885\n","Epoch 68/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.7848\n","Epoch 69/100\n","1441/1441 [==============================] - 7s 5ms/step - loss: 81.0212\n","Epoch 70/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 58.6053\n","Epoch 71/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.1631\n","Epoch 72/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.7799\n","Epoch 73/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 85.0842\n","Epoch 74/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 62.6910\n","Epoch 75/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 63.7113\n","Epoch 76/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 62.1695\n","Epoch 77/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 61.2607\n","Epoch 78/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.2966\n","Epoch 79/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 68.7608\n","Epoch 80/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 59.5758\n","Epoch 81/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 65.4627\n","Epoch 82/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.7177\n","Epoch 83/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 53.7625\n","Epoch 84/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 76.3856\n","Epoch 85/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 69.9233\n","Epoch 86/100\n","1441/1441 [==============================] - 8s 6ms/step - loss: 62.9729\n","Epoch 87/100\n","1441/1441 [==============================] - 7s 5ms/step - loss: 62.3445\n","Epoch 88/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.8444\n","Epoch 89/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 73.7238\n","Epoch 90/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 71.7690\n","Epoch 91/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 71.2220\n","Epoch 92/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 76.3379\n","Epoch 93/100\n","1441/1441 [==============================] - 8s 5ms/step - loss: 78.6291\n","Epoch 94/100\n","1441/1441 [==============================] - 7s 5ms/step - loss: 63.6805\n","Epoch 95/100\n","1441/1441 [==============================] - 7s 5ms/step - loss: 63.9260\n","Epoch 96/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.6535\n","Epoch 97/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 57.0666\n","Epoch 98/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.5956\n","Epoch 99/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 57.5406\n","Epoch 100/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 68.0764\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fbc905613a0>"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["##3. DNN의 결과 평가하기   \n","   \n","훈련된 DNN을 사용하여 예측가능.   \n","=> 윈도 데이터셋을 사용했기 때문에   \n","=> 특정 개수의 타임스텝값을 기반으로 예측   \n","   \n","즉, 데이터가 series라는 리스트라면    \n","=> 하나의 값을 예측하기 위해   \n","=> 시간 t에서 시간 t+window_size까지의 값을 모델에 전달해야 한다.   \n","=> 그러면 모델이 그 다음 타임스텝에 대한 예측값을 반환   \n","   \n","예) 타입스텝 1,020의 값을 예측하려면   \n","=> 타임스텝 1,000에서 1,019까지의 값을 사용하여 다음 값을 예측   \n","=> series[1,000:1,020]으로 지정   \n","   \n","타임스텝 1020의 값을 출력하려면 series[1,020]을 사용   \n","   \n","데이터 예측: model.predict()에 전달   \n","=> 훈련할 때와 동일하게 유지하려면 [np.newaxis]를 추가   \n","=> series[1,000:1,020][np.newaxis]를 전달.   \n","\n","참고: 예측값에 대한 정확도가 떨어질 경우, 다른 위도 크기를 설정하여 모델을 재훈련\n"],"metadata":{"id":"xBTkFvQbL5m0"}},{"cell_type":"code","source":["print(series[1000:1020])\n","print(series[1020])\n","print(model.predict(series[1000:1020][np.newaxis]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nH9t5NPlLPfL","executionInfo":{"status":"ok","timestamp":1680057336916,"user_tz":-540,"elapsed":604,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"c37df478-6c5f-42ed-8b4f-71cc6830a850"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[109.170746 106.86935  102.61668   99.15634  105.95478  104.503876\n"," 107.08533  105.858284 108.00339  100.15279  109.4894   103.96404\n"," 113.426094  99.67773  111.87749  104.26137  100.08899  101.00105\n"," 101.893265 105.69048 ]\n","106.258606\n","1/1 [==============================] - 0s 26ms/step\n","[[98.85554]]\n"]}]},{"cell_type":"code","source":["start_point = 1000\n","\n","print(series[start_point:start_point+window_size])\n","print(series[start_point+window_size])\n","print(model.predict(\n","      series[start_point:start_point+window_size][np.newaxis]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i688SGcZNlgb","executionInfo":{"status":"ok","timestamp":1680057350327,"user_tz":-540,"elapsed":594,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"04aa17b4-9454-448f-a1b0-b3b0cf21bd33"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["[109.170746 106.86935  102.61668   99.15634  105.95478  104.503876\n"," 107.08533  105.858284 108.00339  100.15279  109.4894   103.96404\n"," 113.426094  99.67773  111.87749  104.26137  100.08899  101.00105\n"," 101.893265 105.69048 ]\n","106.258606\n","1/1 [==============================] - 0s 23ms/step\n","[[98.85554]]\n"]}]},{"cell_type":"markdown","source":["## 전반적인 예측 살펴보기"],"metadata":{"id":"hMf-Mw2oOPNe"}},{"cell_type":"code","source":["forecast = []\n","for time in range(len(series) - window_size):\n","    forecast.append(\n","        model.predict(series[time:time + window_size][np.newaxis]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"98U8DlS0OLQA","executionInfo":{"status":"ok","timestamp":1680057663015,"user_tz":-540,"elapsed":109967,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"647cb0c1-fd51-48cc-a2c9-16d02213f9cd"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 40ms/step\n","1/1 [==============================] - 0s 43ms/step\n","1/1 [==============================] - 0s 49ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 42ms/step\n","1/1 [==============================] - 0s 42ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 41ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 40ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 42ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 45ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 57ms/step\n","1/1 [==============================] - 0s 74ms/step\n","1/1 [==============================] - 0s 63ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 58ms/step\n","1/1 [==============================] - 0s 67ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 69ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 46ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 75ms/step\n","1/1 [==============================] - 0s 82ms/step\n","1/1 [==============================] - 0s 135ms/step\n","1/1 [==============================] - 0s 65ms/step\n","1/1 [==============================] - 0s 80ms/step\n","1/1 [==============================] - 0s 53ms/step\n","1/1 [==============================] - 0s 72ms/step\n","1/1 [==============================] - 0s 77ms/step\n","1/1 [==============================] - 0s 94ms/step\n","1/1 [==============================] - 0s 78ms/step\n","1/1 [==============================] - 0s 56ms/step\n","1/1 [==============================] - 0s 112ms/step\n","1/1 [==============================] - 0s 120ms/step\n","1/1 [==============================] - 0s 44ms/step\n","1/1 [==============================] - 0s 128ms/step\n","1/1 [==============================] - 0s 46ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 93ms/step\n","1/1 [==============================] - 0s 98ms/step\n","1/1 [==============================] - 0s 82ms/step\n","1/1 [==============================] - 0s 111ms/step\n","1/1 [==============================] - 0s 99ms/step\n","1/1 [==============================] - 0s 100ms/step\n","1/1 [==============================] - 0s 68ms/step\n","1/1 [==============================] - 0s 80ms/step\n","1/1 [==============================] - 0s 103ms/step\n","1/1 [==============================] - 0s 101ms/step\n","1/1 [==============================] - 0s 120ms/step\n","1/1 [==============================] - 0s 126ms/step\n","1/1 [==============================] - 0s 118ms/step\n","1/1 [==============================] - 0s 75ms/step\n","1/1 [==============================] - 0s 57ms/step\n","1/1 [==============================] - 0s 44ms/step\n","1/1 [==============================] - 0s 102ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 44ms/step\n","1/1 [==============================] - 0s 54ms/step\n","1/1 [==============================] - 0s 117ms/step\n","1/1 [==============================] - 0s 116ms/step\n","1/1 [==============================] - 0s 132ms/step\n","1/1 [==============================] - 0s 74ms/step\n","1/1 [==============================] - 0s 110ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 74ms/step\n","1/1 [==============================] - 0s 92ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 47ms/step\n","1/1 [==============================] - 0s 62ms/step\n","1/1 [==============================] - 0s 40ms/step\n","1/1 [==============================] - 0s 52ms/step\n","1/1 [==============================] - 0s 90ms/step\n","1/1 [==============================] - 0s 116ms/step\n","1/1 [==============================] - 0s 78ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 48ms/step\n","1/1 [==============================] - 0s 84ms/step\n","1/1 [==============================] - 0s 70ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 56ms/step\n","1/1 [==============================] - 0s 60ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 82ms/step\n","1/1 [==============================] - 0s 67ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 47ms/step\n","1/1 [==============================] - 0s 87ms/step\n","1/1 [==============================] - 0s 96ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 73ms/step\n","1/1 [==============================] - 0s 50ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 54ms/step\n","1/1 [==============================] - 0s 71ms/step\n","1/1 [==============================] - 0s 99ms/step\n","1/1 [==============================] - 0s 91ms/step\n","1/1 [==============================] - 0s 87ms/step\n","1/1 [==============================] - 0s 67ms/step\n","1/1 [==============================] - 0s 66ms/step\n","1/1 [==============================] - 0s 83ms/step\n","1/1 [==============================] - 0s 48ms/step\n","1/1 [==============================] - 0s 53ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 61ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 71ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 47ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 43ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 41ms/step\n","1/1 [==============================] - 0s 41ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 60ms/step\n","1/1 [==============================] - 0s 60ms/step\n","1/1 [==============================] - 0s 66ms/step\n","1/1 [==============================] - 0s 72ms/step\n","1/1 [==============================] - 0s 55ms/step\n","1/1 [==============================] - 0s 74ms/step\n","1/1 [==============================] - 0s 69ms/step\n","1/1 [==============================] - 0s 66ms/step\n","1/1 [==============================] - 0s 91ms/step\n","1/1 [==============================] - 0s 94ms/step\n","1/1 [==============================] - 0s 122ms/step\n","1/1 [==============================] - 0s 54ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 16ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 17ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 48ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 18ms/step\n","1/1 [==============================] - 0s 19ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 66ms/step\n","1/1 [==============================] - 0s 67ms/step\n","1/1 [==============================] - 0s 76ms/step\n","1/1 [==============================] - 0s 61ms/step\n","1/1 [==============================] - 0s 64ms/step\n","1/1 [==============================] - 0s 63ms/step\n","1/1 [==============================] - 0s 70ms/step\n","1/1 [==============================] - 0s 68ms/step\n","1/1 [==============================] - 0s 73ms/step\n","1/1 [==============================] - 0s 69ms/step\n","1/1 [==============================] - 0s 62ms/step\n","1/1 [==============================] - 0s 60ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 40ms/step\n","1/1 [==============================] - 0s 42ms/step\n"]}]},{"cell_type":"code","source":["forecast = forecast[split_time-window_size:]\n","results = np.array(forecast)[:, 0, 0]"],"metadata":{"id":"GrJ8MHhnO84w","executionInfo":{"status":"ok","timestamp":1680058299011,"user_tz":-540,"elapsed":578,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["def plot_series(time, series, format=\"-\", start=0, end=None):\n","    plt.plot(time[start:end], series[start:end], format)\n","    plt.xlabel(\"Time\")\n","    plt.ylabel(\"Value\")\n","    plt.grid(True)"],"metadata":{"id":"zPZNmKrkPNWA","executionInfo":{"status":"ok","timestamp":1680058303159,"user_tz":-540,"elapsed":577,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","\n","plot_series(time_valid, x_valid)\n","plot_series(time_valid, results)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"o8ELX8fqPNSO","executionInfo":{"status":"ok","timestamp":1680058304087,"user_tz":-540,"elapsed":9,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"0c610c0b-363b-49b5-f239-fef8dbaabdab"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["tf.keras.metrics.mean_absolute_error(x_valid, results).numpy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0A53DA2zPNPs","executionInfo":{"status":"ok","timestamp":1680059122950,"user_tz":-540,"elapsed":471,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"61cfd0c3-fdda-4d34-dfb5-6b732e9965f6"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6.648016"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["## 학습률 튜닝"],"metadata":{"id":"WWxxMCrsPQwz"}},{"cell_type":"code","source":["lr_schedule = tf.keras.callbacks.LearningRateScheduler(\n","    lambda epoch: 1e-8 * 10**(epoch / 20))"],"metadata":{"id":"8pKS65BAPNLU","executionInfo":{"status":"ok","timestamp":1680059199531,"user_tz":-540,"elapsed":468,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["model = tf.keras.models.Sequential([\n","    tf.keras.layers.Dense(10, input_shape=[window_size], \n","                          activation=\"relu\"), \n","    tf.keras.layers.Dense(10, activation=\"relu\"), \n","    tf.keras.layers.Dense(1)\n","])\n","\n","optimizer = tf.keras.optimizers.SGD(learning_rate=1e-8, momentum=0.9)\n","model.compile(loss=\"mse\", optimizer=optimizer)\n","history = model.fit(dataset, epochs=100, \n","                    callbacks=[lr_schedule], verbose=0)"],"metadata":{"id":"4RE_ycfTPNI_","executionInfo":{"status":"ok","timestamp":1680059602415,"user_tz":-540,"elapsed":399708,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["lrs = 1e-8 * (10 ** (np.arange(100) / 20))\n","plt.semilogx(lrs, history.history[\"loss\"])\n","plt.axis([1e-8, 1e-3, 0, 300])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273},"id":"Vz-jGJEaPTxb","executionInfo":{"status":"ok","timestamp":1680059731246,"user_tz":-540,"elapsed":1205,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"e0f2f60f-ac50-4594-bb1f-6c83c7ae768a"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["학습률 1e-6에서 다시 훈련"],"metadata":{"id":"Lo11k-uEPWkD"}},{"cell_type":"code","source":["model = tf.keras.models.Sequential([\n","    tf.keras.layers.Dense(10, input_shape=[window_size], \n","                          activation=\"relu\"), \n","    tf.keras.layers.Dense(10, activation=\"relu\"), \n","    tf.keras.layers.Dense(1)\n","])\n","\n","sgd = tf.keras.optimizers.SGD(learning_rate=1e-6, momentum=0.9)\n","model.compile(loss=\"mse\",optimizer=sgd)\n","model.fit(dataset,epochs=100,verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ylth94hcPTt7","executionInfo":{"status":"ok","timestamp":1680060425346,"user_tz":-540,"elapsed":512957,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"a78e5bc9-122b-4a39-c493-6a6ae108bdef"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 107.7169\n","Epoch 2/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.1339\n","Epoch 3/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.9633\n","Epoch 4/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.9879\n","Epoch 5/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 82.2102\n","Epoch 6/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.1895\n","Epoch 7/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.4297\n","Epoch 8/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 57.1348\n","Epoch 9/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 60.7019\n","Epoch 10/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.1405\n","Epoch 11/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.3706\n","Epoch 12/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.1681\n","Epoch 13/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 69.6389\n","Epoch 14/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 62.4611\n","Epoch 15/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.4650\n","Epoch 16/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 64.9294\n","Epoch 17/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 64.1658\n","Epoch 18/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.1842\n","Epoch 19/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 55.7381\n","Epoch 20/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 80.1138\n","Epoch 21/100\n","1441/1441 [==============================] - 7s 5ms/step - loss: 57.9014\n","Epoch 22/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 59.2221\n","Epoch 23/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 65.7373\n","Epoch 24/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 66.0117\n","Epoch 25/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 60.7552\n","Epoch 26/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 69.7419\n","Epoch 27/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.3079\n","Epoch 28/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 60.7916\n","Epoch 29/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 64.0567\n","Epoch 30/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 61.2331\n","Epoch 31/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.4106\n","Epoch 32/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.3260\n","Epoch 33/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 59.7658\n","Epoch 34/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.8349\n","Epoch 35/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 74.3566\n","Epoch 36/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 58.3121\n","Epoch 37/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 76.5015\n","Epoch 38/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 64.4505\n","Epoch 39/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 56.7204\n","Epoch 40/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.0198\n","Epoch 41/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.8268\n","Epoch 42/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 70.6392\n","Epoch 43/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 73.7461\n","Epoch 44/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 59.2585\n","Epoch 45/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.7623\n","Epoch 46/100\n","1441/1441 [==============================] - 8s 5ms/step - loss: 61.2831\n","Epoch 47/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 62.9172\n","Epoch 48/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 72.3377\n","Epoch 49/100\n","1441/1441 [==============================] - 6s 4ms/step - loss: 64.4851\n","Epoch 50/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 62.0747\n","Epoch 51/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 70.1409\n","Epoch 52/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 60.8298\n","Epoch 53/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.4135\n","Epoch 54/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.9533\n","Epoch 55/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 66.2756\n","Epoch 56/100\n","1441/1441 [==============================] - 8s 5ms/step - loss: 64.4621\n","Epoch 57/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 66.6960\n","Epoch 58/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 59.4827\n","Epoch 59/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 64.5022\n","Epoch 60/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 67.7751\n","Epoch 61/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 61.7895\n","Epoch 62/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 57.2101\n","Epoch 63/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 65.1206\n","Epoch 64/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 58.1484\n","Epoch 65/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 67.1967\n","Epoch 66/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 58.9141\n","Epoch 67/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 58.8446\n","Epoch 68/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 57.0155\n","Epoch 69/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 74.1861\n","Epoch 70/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 74.9751\n","Epoch 71/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 70.1862\n","Epoch 72/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 56.0746\n","Epoch 73/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 69.6556\n","Epoch 74/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 51.0039\n","Epoch 75/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.0556\n","Epoch 76/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.7738\n","Epoch 77/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.3033\n","Epoch 78/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 56.6164\n","Epoch 79/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 66.4954\n","Epoch 80/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.4616\n","Epoch 81/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 65.4717\n","Epoch 82/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 61.9875\n","Epoch 83/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 66.0431\n","Epoch 84/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 65.3111\n","Epoch 85/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 71.3203\n","Epoch 86/100\n","1441/1441 [==============================] - 5s 4ms/step - loss: 66.3688\n","Epoch 87/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.6684\n","Epoch 88/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 65.0105\n","Epoch 89/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 67.6877\n","Epoch 90/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 63.9548\n","Epoch 91/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 60.7531\n","Epoch 92/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 58.9630\n","Epoch 93/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 69.4006\n","Epoch 94/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 64.8213\n","Epoch 95/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 72.8298\n","Epoch 96/100\n","1441/1441 [==============================] - 5s 3ms/step - loss: 64.4882\n","Epoch 97/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 59.0595\n","Epoch 98/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 68.6096\n","Epoch 99/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 54.0969\n","Epoch 100/100\n","1441/1441 [==============================] - 4s 3ms/step - loss: 67.2972\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fbc1b00f280>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["forecast = []\n","for time in range(len(series) - window_size):\n","    forecast.append(\n","        model.predict(series[time:time + window_size][np.newaxis]))\n","    \n","forecast = forecast[split_time-window_size:]\n","results = np.array(forecast)[:, 0, 0]"],"metadata":{"id":"41jxkNXzPTre"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","\n","plot_series(time_valid, x_valid)\n","plot_series(time_valid, results)"],"metadata":{"id":"U27bccJcPaaw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tf.keras.metrics.mean_absolute_error(x_valid, results).numpy()"],"metadata":{"id":"4YADHgtSYTmi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 케라스 튜너로 하이퍼파라미터 튜닝하기\n","   \n","케라스 튜너의 특징:   \n","테스트할 범위를 지정하여 하이퍼파라미터를 매개변수화 가능.   \n","지정한 특정 지표로 모델을 평가(objective 매개변수)   \n","=> 최상의 모델을 리포트"],"metadata":{"id":"z2-7TUDtYW33"}},{"cell_type":"code","source":["!pip install keras-tuner"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xNLjD6xpYTiF","executionInfo":{"status":"ok","timestamp":1680060432811,"user_tz":-540,"elapsed":7468,"user":{"displayName":"김수한무","userId":"00181544401783463434"}},"outputId":"c51c266c-2905-4239-c13d-b437e85985b8"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting keras-tuner\n","  Downloading keras_tuner-1.3.3-py3-none-any.whl (172 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m172.1/172.1 KB\u001b[0m \u001b[31m15.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting kt-legacy\n","  Downloading kt_legacy-1.0.4-py3-none-any.whl (9.6 kB)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.9/dist-packages (from keras-tuner) (23.0)\n","Requirement already satisfied: protobuf<=3.20.3 in /usr/local/lib/python3.9/dist-packages (from keras-tuner) (3.19.6)\n","Requirement already satisfied: tensorflow>=2.0 in /usr/local/lib/python3.9/dist-packages (from keras-tuner) (2.11.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.9/dist-packages (from keras-tuner) (2.27.1)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (1.51.3)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (4.5.0)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (3.8.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (1.22.4)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (1.6.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (67.6.0)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (0.4.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (1.16.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (15.0.6.1)\n","Requirement already satisfied: tensorflow-estimator<2.12,>=2.11.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (2.11.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (0.31.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (1.4.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (1.15.0)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (23.3.3)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (2.2.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (3.3.0)\n","Requirement already satisfied: tensorboard<2.12,>=2.11 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (2.11.2)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (0.2.0)\n","Requirement already satisfied: keras<2.12,>=2.11.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow>=2.0->keras-tuner) (2.11.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests->keras-tuner) (2022.12.7)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests->keras-tuner) (3.4)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests->keras-tuner) (2.0.12)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests->keras-tuner) (1.26.15)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.9/dist-packages (from astunparse>=1.6.0->tensorflow>=2.0->keras-tuner) (0.40.0)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (2.2.3)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (0.6.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (2.16.2)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (0.4.6)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (1.8.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (3.4.3)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (5.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.9/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (4.9)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.9/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (0.2.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.9/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.9/dist-packages (from markdown>=2.6.8->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (6.1.0)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.9/dist-packages (from werkzeug>=1.0.1->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (2.1.2)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.9/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (3.15.0)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.9/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.9/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow>=2.0->keras-tuner) (3.2.2)\n","Installing collected packages: kt-legacy, keras-tuner\n","Successfully installed keras-tuner-1.3.3 kt-legacy-1.0.4\n"]}]},{"cell_type":"code","source":["def build_model(hp):\n","    model = tf.keras.models.Sequential()\n","    model.add(tf.keras.layers.Dense(\n","        units=hp.Int('units', min_value=10, max_value=30, step=2), \n","        activation='relu', input_shape=[window_size]))\n","    model.add(tf.keras.layers.Dense(10, activation='relu'))\n","    model.add(tf.keras.layers.Dense(1))\n","    sgd = tf.keras.optimizers.SGD(\n","        learning_rate=1e-6,\n","        momentum=hp.Choice('momentum', values=[.9, .7, .5, .3]))\n","    model.compile(loss=\"mse\", optimizer=sgd)\n","    return model"],"metadata":{"id":"h2qmVJDdYTfj","executionInfo":{"status":"ok","timestamp":1680060451653,"user_tz":-540,"elapsed":637,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["from keras_tuner.tuners import RandomSearch"],"metadata":{"id":"GpH9r3dlYTVC","executionInfo":{"status":"ok","timestamp":1680060459429,"user_tz":-540,"elapsed":1702,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["# 케라스 튜너의 RandomSearch 객체를 만들어 모델읠 하이퍼파라미터 탐색을 위임\n","\n","tuner = RandomSearch(build_model,\n","                     objective='loss', max_trials=150, \n","                     executions_per_trial=3, directory='my_dir', \n","                     project_name='hello', overwrite=True)\n","# objective='loss': 손실을 최소화하고자 하는 목적\n","# max_trials: 최대 탐색 횟수를 제한\n","# executions_per_trial: (랜덤한 변동을 줄이기 위해) 모델 훈련과 평가 횟수를 지정함"],"metadata":{"id":"cS6aT3SxZBa8","executionInfo":{"status":"ok","timestamp":1680060461387,"user_tz":-540,"elapsed":4,"user":{"displayName":"김수한무","userId":"00181544401783463434"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["tuner.search(dataset, epochs=100, verbose=0)"],"metadata":{"id":"sqrNMutvZBYg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tuner.results_summary()"],"metadata":{"id":"insMbL4rZBWU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["best_models = tuner.get_best_models(num_models=4) "],"metadata":{"id":"Ft13INe4ZBTw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = best_models[0]\n","\n","forecast = []\n","for time in range(len(series) - window_size):\n","    forecast.append(\n","        model.predict(series[time:time + window_size][np.newaxis]))\n","    \n","forecast = forecast[split_time-window_size:]\n","results = np.array(forecast)[:, 0, 0]"],"metadata":{"id":"47vHsY9xZBQ1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","\n","plot_series(time_valid, x_valid)\n","plot_series(time_valid, results)"],"metadata":{"id":"bSviB9xaZJeq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tf.keras.metrics.mean_absolute_error(x_valid, results).numpy()"],"metadata":{"id":"6lbjOJiaZJbx"},"execution_count":null,"outputs":[]}]}